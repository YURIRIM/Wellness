<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="profileMapper">

<select id="selectMyProfile" resultType="ProfileResponse">
  select a1.*, P.PICTURE, P.WATERMARK
  from (
	  select p.USER_NO
	        ,p.BIO
	        ,p.IS_OPEN
	        ,p.WATERMARK_TYPE
	        ,count(cp.CHAL_NO) as chal_particiapte_count
	        ,SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) as success_count
	        ,SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) as fail_count
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS SUCCESS_RATIO
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS FAIL_RATIO
	  from PROFILE p
	  left join CHALLENGE_PARTICIPATION cp on(cp.USER_NO = p.USER_NO)
	  where p.user_no = #{userNo}
	  group by p.USER_NO
	          ,p.BIO
	          ,p.IS_OPEN
	          ,p.WATERMARK_TYPE
	  ) a1
  left join PROFILE P ON a1.USER_NO = P.USER_NO
</select>

<insert id="insertMyProfile" parameterType="ProfileRequest">
  insert into PROFILE(USER_NO, PICTURE, BIO, IS_OPEN, WATERMARK_TYPE, WATERMARK)
  values(#{userNo},#{picture},#{bio},#{isOpen},#{watermarkType},#{watermark})
</insert>

<update id="updateMyProfile" parameterType="ProfileRequest">
  update PROFILE
  set PICTURE = #{picture}
      ,BIO = #{bio}
      ,IS_OPEN = #{isOpen}
      ,WATERMARK_TYPE = #{watermarkType}
      ,WATERMARK = #{watermark}
  where USER_NO = #{userNo}
</update>

<select id="profileIsOpen" resultType="string" parameterType="int">
	select IS_OPEN
	from PROFILE
	where USER_NO = #{userNo}
</select>

<select id="updateSessionMyProfile" resultType="ProfileResponse" parameterType="int">
	select count(cp.CHAL_NO) as chal_particiapte_count
	        ,SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) as success_count
	        ,SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) as fail_count
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS SUCCESS_RATIO
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS FAIL_RATIO
	  from PROFILE p
	  left join CHALLENGE_PARTICIPATION cp on(cp.USER_NO = p.USER_NO)
	  where p.user_no = #{userNo}
	  group by p.USER_NO
</select>

<select id="profileDetail" resultType="ProfileResponse" parameterType="int">
  select a1.*, P.PICTURE
  from (
	  select p.USER_NO
	        ,p.BIO
	        ,p.IS_OPEN
	        ,u.NICK
	        ,count(cp.CHAL_NO) as chal_particiapte_count
	        ,SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) as success_count
	        ,SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) as fail_count
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS SUCCESS_RATIO
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS FAIL_RATIO
	  from PROFILE p
	  left join CHALLENGE_PARTICIPATION cp on(cp.USER_NO = p.USER_NO)
	  left join USERS u on(u.USER_NO = p.USER_NO)
	  where p.user_no = #{userNo}
	  and p.IS_OPEN = 'Y'
	  group by p.USER_NO
	          ,p.BIO
	          ,p.IS_OPEN
	          ,u.NICK
	  ) a1
  left join PROFILE P ON a1.USER_NO = P.USER_NO
</select>

<select id="chalParticipate" resultType="ChallengeResponse" parameterType="SearchMyChallenge">
select *
from (
	select a1.*
	,P.PICTURE
	,rownum rnum
	,(SELECT THUMBNAIL FROM CHALLENGE C2 WHERE C2.CHAL_NO = a1.CHAL_NO) AS THUMBNAIL
	from(
		select
			C.CHAL_NO
			,C.USER_NO
			,C.TITLE
			,C.CONTENT
			,C.VERIFY_CYCLE
			,C.CREATE_DATE
			,C.START_DATE
			,C.END_DATE
			,C.STATUS
			,C.PICTURE_REQUIRED
			,C.REPLY_REQUIRED
			,CC.CATEGORY_NAME
			,U.NICK
			,P.IS_OPEN
			,COUNT(cp.user_no) as PARTICIPATE_COUNT
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'S' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS SUCCESS_RATIO
		    ,CASE WHEN COUNT(cp.user_no) = 0 THEN 0 ELSE ROUND(
		           SUM(CASE WHEN cp.STATUS = 'F' THEN 1 ELSE 0 END) * 100.0
		             / COUNT(cp.user_no) , 2) END AS FAIL_RATIO

		from CHALLENGE c
		left join CHALLENGE_CATEGORY cc on(c.CATEGORY_NO = cc.CATEGORY_NO)
		left join CHALLENGE_PARTICIPATION cp on(c.CHAL_NO = cp.CHAL_NO)
		left join USERS u on(c.USER_NO = u.USER_NO)
		left join PROFILE p on(u.USER_NO = p.USER_NO)

		where C.STATUS != 'D'
		<choose>
			<when test='searchType == "P"'>
				and cp.USER_NO = #{userNo}
				and c.USER_NO != #{userNo}
			</when>
			<otherwise>
				and c.USER_NO = #{userNo}
 			</otherwise>
		</choose>

		group by
			C.CHAL_NO
			,C.USER_NO
			,C.TITLE
			,C.CONTENT
			,C.VERIFY_CYCLE
			,C.CREATE_DATE
			,C.START_DATE
			,C.END_DATE
			,C.STATUS
			,C.PICTURE_REQUIRED
			,C.REPLY_REQUIRED
			,CC.CATEGORY_NAME
			,U.NICK
			,P.IS_OPEN
		
		order by
			CASE WHEN C.STATUS = 'Y' THEN 0 ELSE 1 END,
			C.CREATE_DATE DESC
	) a1

	left join PROFILE P ON a1.USER_NO = P.USER_NO

	where rownum &lt;= (#{currentPage}+1) * #{showLimit}
)
where rnum &gt; #{currentPage} * #{showLimit}
</select>

</mapper>
