<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatMessageMapper">

    <insert id="insertChatMessage" parameterType="ChatMessage">
        <selectKey keyProperty="messageNo" resultType="int" order="BEFORE">
            SELECT SEQ_MESSAGE_NO.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO chat_messages (
            message_no, meeting_no, user_no, message_content,
            message_type, file_url, file_name
        ) VALUES (
            #{messageNo}, #{meetingNo}, #{userNo}, #{messageContent},
            #{messageType}, #{fileUrl}, #{fileName}
        )
    </insert>

    <update id="updateChatMessage" parameterType="ChatMessage">
        UPDATE chat_messages
        SET message_content = #{messageContent},
            message_type = #{messageType},
            file_url = #{fileUrl},
            file_name = #{fileName}
        WHERE message_no = #{messageNo}
    </update>

    <delete id="deleteChatMessage" parameterType="int">
        DELETE FROM chat_messages WHERE message_no = #{messageNo}
    </delete>

    <select id="selectChatMessages" parameterType="map" resultType="ChatMessage">
        SELECT * FROM (
            SELECT
                cm.message_no,
                cm.meeting_no,
                cm.user_no,
                cm.message_content,
                cm.message_type,
                cm.file_url,
                cm.file_name,
                cm.sent_at,
                u.name AS user_name
            FROM chat_messages cm
            JOIN USERS u ON cm.user_no = u.user_no
            WHERE cm.meeting_no = #{meetingNo}
            ORDER BY cm.sent_at DESC
        )
        <if test="limit != null and limit > 0">
        <![CDATA[ WHERE ROWNUM <= #{limit} ]]>
        </if>
        ORDER BY sent_at ASC
    </select>

    <select id="selectUnreadCount" parameterType="int" resultType="int">
        <![CDATA[
        SELECT (
            SELECT COUNT(*) - 1
            FROM meeting_part
            WHERE meeting_no = (SELECT meeting_no FROM chat_messages WHERE message_no = #{messageNo})
        ) - (
            SELECT COUNT(*)
            FROM meeting_part mp
            WHERE mp.meeting_no = (SELECT meeting_no FROM chat_messages WHERE message_no = #{messageNo})
            AND mp.user_no != (SELECT user_no FROM chat_messages WHERE message_no = #{messageNo})
            AND mp.last_read_at >= (SELECT sent_at FROM chat_messages WHERE message_no = #{messageNo})
        ) AS unread_count
        FROM DUAL
        ]]>
    </select>

    <update id="updateReadTime" parameterType="map">
        UPDATE meeting_part
        SET last_read_at = SYSDATE
        WHERE meeting_no = #{meetingNo}
        <choose>
            <when test="messageNo != null">
                AND user_no = (SELECT user_no FROM chat_messages WHERE message_no = #{messageNo})
            </when>
            <when test="userNo != null">
                AND user_no = #{userNo}
            </when>
        </choose>
    </update>

</mapper>