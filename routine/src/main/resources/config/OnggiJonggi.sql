----------------시스템계정--------------------
--DROP USER ROUTINE CASCADE;--계정 삭제
--
--create user ROUTINE identified by ROUTINE;
--grant resource, connect to ROUTINE;
----------------------------------------------

--사진 정리하기
delete from ATTACHMENT
where STATUS = 'N';
commit;

--시퀀스
CREATE SEQUENCE SEQ_CHALLENGE
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE SEQ_ATTACHMENT
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE SEQUENCE SEQ_CHALLENGE_COMMENT
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;



--------------------내 맘대로 만드는 유저 저장소--------------------
-- USER_NO 시퀀스 생성
CREATE SEQUENCE SEQ_USER_NO
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- USERS 테이블 생성
CREATE TABLE USERS (
    user_no      NUMBER           PRIMARY KEY,
    user_id      VARCHAR2(100),
    name         VARCHAR2(100),
    nick         VARCHAR2(100),
    password     VARCHAR2(100),
    email        VARCHAR2(100),
    role         VARCHAR2(100),
    created_at   DATE,
    status       VARCHAR2(1)
);
------------------------------------------------------------

--챌린지 카테고리
CREATE TABLE CHALLENGE_CATEGORY (
    CATEGORY_NO   NUMBER         CONSTRAINT PK_CHALLENGE_CATEGORY PRIMARY KEY,
    CATEGORY_NAME VARCHAR2(100)  CONSTRAINT NN_CHALLENGE_CATEGORY_NAME NOT NULL
);
COMMENT ON TABLE CHALLENGE_CATEGORY IS '챌린지 카테고리';
COMMENT ON COLUMN CHALLENGE_CATEGORY.CATEGORY_NO IS '카테고리 번호';
COMMENT ON COLUMN CHALLENGE_CATEGORY.CATEGORY_NAME IS '카테고리 이름';

-- 카테고리 데이터
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (10, '운동');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (11, '달리기');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (12, '자전거');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (13, '헬스');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (14, '요가/필라테스');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (15, '등산');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (16, '기타');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (20, '자기계발');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (21, '공부');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (22, '독서');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (23, '재무관리');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (24, '피부관리');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (25, '다이어트');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (26, '기타');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (30, '라이프스타일');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (31, '식습관');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (32, '일기쓰기');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (33, '아침기상');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (34, '기타');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (40, '기타');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (41, '놀이방');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (42, '기부/봉사');
INSERT INTO CHALLENGE_CATEGORY (CATEGORY_NO, CATEGORY_NAME) VALUES (43, '기타');

--챌린지
CREATE TABLE CHALLENGE (
    CHAL_NO           NUMBER        CONSTRAINT PK_CHALLENGE PRIMARY KEY,
    USER_NO           NUMBER        CONSTRAINT FK_CHALLENGE_USERS REFERENCES USERS(USER_NO),
    CATEGORY_NO       NUMBER        CONSTRAINT FK_CHALLENGE_CATEGORY REFERENCES CHALLENGE_CATEGORY(CATEGORY_NO),
    TITLE             VARCHAR2(330) CONSTRAINT NN_CHALLENGE_TITLE NOT NULL,
    CONTENT           VARCHAR2(3300),
    THUMBNAIL         BLOB,
    VERIFY_CYCLE      NUMBER(3),
    CREATE_DATE       TIMESTAMP,
    START_DATE        TIMESTAMP,
    END_DATE          TIMESTAMP,
    STATUS            VARCHAR2(1)   CONSTRAINT CK_CHALLENGE_STATUS CHECK (STATUS IN ('Y','N','D')),
    PICTURE_REQUIRED  VARCHAR2(1)   CONSTRAINT CK_CHALLENGE_PICTURE_REQUIRED CHECK (PICTURE_REQUIRED IN ('I','Y','O','N')),
    REPLY_REQUIRED    VARCHAR2(1)   CONSTRAINT CK_CHALLENGE_REPLY_REQUIRED CHECK (REPLY_REQUIRED IN ('Y','O','N'))
);
COMMENT ON TABLE CHALLENGE IS '챌린지';
COMMENT ON COLUMN CHALLENGE.CHAL_NO IS '챌린지 번호';
COMMENT ON COLUMN CHALLENGE.USER_NO IS '생성자';
COMMENT ON COLUMN CHALLENGE.CATEGORY_NO IS '카테고리 번호';
COMMENT ON COLUMN CHALLENGE.TITLE IS '챌린지 제목';
COMMENT ON COLUMN CHALLENGE.CONTENT IS '챌린지 내용';
COMMENT ON COLUMN CHALLENGE.THUMBNAIL IS '썸네일';
COMMENT ON COLUMN CHALLENGE.VERIFY_CYCLE IS '인증 주기';
COMMENT ON COLUMN CHALLENGE.CREATE_DATE IS '챌린지 생성일시';
COMMENT ON COLUMN CHALLENGE.START_DATE IS '챌린지 시작일';
COMMENT ON COLUMN CHALLENGE.END_DATE IS '챌린지 종료일';
COMMENT ON COLUMN CHALLENGE.STATUS IS '상태(Y:활성화, N:종료됨, D:삭제됨)';
COMMENT ON COLUMN CHALLENGE.PICTURE_REQUIRED IS '사진 인증(I:필수(도용 불가) Y:필수, O:선택, N:불가)';
COMMENT ON COLUMN CHALLENGE.REPLY_REQUIRED IS '댓글(Y:필수, O:선택, N:불가)';

--기간 지난 챌린지 종료하기
-- CREATE OR REPLACE PROCEDURE update_expired_challenge
-- AS
-- BEGIN
--     UPDATE CHALLENGE
--     SET STATUS = 'N'
--     WHERE END_DATE < SYSDATE
--     AND STATUS = 'Y';
-- END;
-- /
-- BEGIN
-- DBMS_SCHEDULER.create_job (
--     job_name        => 'JOB_UPDATE_EXPIRED_CHALLENGE',
--     job_type        => 'PLSQL_BLOCK',
--     job_action      => 'BEGIN update_expired_challenge; END;',
--     start_date      => TRUNC(SYSDATE + 1),                            -- 내일 0시부터 시작
--     repeat_interval => 'FREQ=DAILY;BYHOUR=0;BYMINUTE=0;BYSECOND=0',   -- 매일 00:00:00 실행
--     enabled         => TRUE
-- );
-- END;
-- /


--챌린지 참여자
CREATE TABLE CHALLENGE_PARTICIPATION (
    CHAL_NO           NUMBER        CONSTRAINT FK_CP_CHALLENGE REFERENCES CHALLENGE(CHAL_NO),
    USER_NO           NUMBER        CONSTRAINT FK_CP_USERS REFERENCES USERS(USER_NO),
    STATUS            VARCHAR2(1)   CONSTRAINT CK_CP_STATUS CHECK (STATUS IN ('Y','S','F')),

    CONSTRAINT UK_CHALLENGE_PARTICIPATION UNIQUE (CHAL_NO, USER_NO)
);
COMMENT ON TABLE CHALLENGE_PARTICIPATION IS '챌린지 참여자';
COMMENT ON COLUMN CHALLENGE_PARTICIPATION.CHAL_NO IS '챌린지 번호';
COMMENT ON COLUMN CHALLENGE_PARTICIPATION.USER_NO IS '생성자';
COMMENT ON COLUMN CHALLENGE_PARTICIPATION.STATUS IS '상태(Y:참여중, S:성공, F:실패)';


--챌린지 댓글
CREATE TABLE CHALLENGE_COMMENT (
    COMMENT_NO        NUMBER        CONSTRAINT PK_CHALLENGE_COMMENT PRIMARY KEY,
    USER_NO           NUMBER        CONSTRAINT FK_COMMENT_USERS REFERENCES USERS(USER_NO),
    CHAL_NO           NUMBER        CONSTRAINT FK_COMMENT_CHALLENGE REFERENCES CHALLENGE(CHAL_NO),
    RECOMMENT_TARGET  NUMBER        CONSTRAINT FK_COMMENT_RECOMMENT REFERENCES CHALLENGE_COMMENT(COMMENT_NO),
    REPLY             VARCHAR2(3300),
    CREATE_DATE       TIMESTAMP,
    STATUS            VARCHAR2(1)   CONSTRAINT CK_COMMENT_STATUS CHECK (STATUS IN ('Y','N','M'))
);
COMMENT ON TABLE CHALLENGE_COMMENT IS '챌린지 댓글';
COMMENT ON COLUMN CHALLENGE_COMMENT.COMMENT_NO IS '댓글 번호';
COMMENT ON COLUMN CHALLENGE_COMMENT.USER_NO IS '작성자';
COMMENT ON COLUMN CHALLENGE_COMMENT.CHAL_NO IS '챌린지 번호';
COMMENT ON COLUMN CHALLENGE_COMMENT.RECOMMENT_TARGET IS '대댓글 대상 댓글번호';
COMMENT ON COLUMN CHALLENGE_COMMENT.REPLY IS '댓글 내용';
COMMENT ON COLUMN CHALLENGE_COMMENT.CREATE_DATE IS '작성일';
COMMENT ON COLUMN CHALLENGE_COMMENT.STATUS IS '상태(Y:활성, N:비활성, M:수정됨)';

--첨부파일
CREATE TABLE ATTACHMENT (
    UUID            RAW(16)       CONSTRAINT PK_ATTACHMENT PRIMARY KEY,
    REF_NO          NUMBER,
    REF_TABLE       VARCHAR2(1)   CONSTRAINT CK_ATTACHMENT_REF_TABLE CHECK (REF_TABLE IN ('C','R')),
    FILE_CONTENT    BLOB,
    FILE_SIZE       NUMBER        CONSTRAINT NN_ATTACHMENT_FILE_SIZE NOT NULL,
    FILE_NAME       VARCHAR2(330) CONSTRAINT NN_ATTACHMENT_FILE_NAME NOT NULL,
    STATUS          VARCHAR2(1)   CONSTRAINT CK_ATTACHMENT_STATUS CHECK (STATUS IN ('Y','N'))
);
COMMENT ON TABLE ATTACHMENT IS '첨부파일';
COMMENT ON COLUMN ATTACHMENT.UUID IS 'UUID';
COMMENT ON COLUMN ATTACHMENT.REF_NO IS '참조 대상 번호';
COMMENT ON COLUMN ATTACHMENT.REF_TABLE IS '참조 테이블(C:챌린지, T:챌린지 썸네일, R:챌린지 댓글)';
COMMENT ON COLUMN ATTACHMENT.FILE_CONTENT IS '첨부파일(BLOB)';
COMMENT ON COLUMN ATTACHMENT.FILE_SIZE IS '파일 크기';
COMMENT ON COLUMN ATTACHMENT.FILE_NAME IS '파일 이름';
COMMENT ON COLUMN ATTACHMENT.STATUS IS '상태(Y:정상, N:비활성화)';

--프로필
CREATE TABLE PROFILE (
    USER_NO           NUMBER        CONSTRAINT FK_PROFILE_USERS REFERENCES USERS(USER_NO) UNIQUE,
    PICTURE           BLOB,
    BIO               VARCHAR2(330),
    WATERMARK_TYPE    VARCHAR2(1)   CONSTRAINT CK_PROFILE_WT CHECK (WATERMARK_TYPE IN ('D','C','N')),
    WATERMARK         BLOB,
    IS_OPEN           VARCHAR2(1)   CONSTRAINT CK_IS_OPEN CHECK (IS_OPEN IN ('Y','N','A'))
);
COMMENT ON TABLE PROFILE IS '프로필';
COMMENT ON COLUMN PROFILE.USER_NO IS '대상 회원';
COMMENT ON COLUMN PROFILE.PICTURE IS '프로필 사진';
COMMENT ON COLUMN PROFILE.BIO IS '자기소개';
COMMENT ON COLUMN PROFILE.WATERMARK_TYPE IS '워터마크 종류 (D:디폴트 C:개인 N:없음)';
COMMENT ON COLUMN PROFILE.WATERMARK IS '워터마크';
COMMENT ON COLUMN PROFILE.IS_OPEN IS '프로필 공개여부 (Y:공개, N:참여한 챌린지 비공개, A:익명)';

commit;
